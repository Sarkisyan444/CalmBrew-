import React, { useState, useMemo } from 'react'
import { Link } from 'react-router-dom'
import { useCart } from '../context/CartContext'
import { Product } from '../context/CartContext'

const Catalog: React.FC = () => {
  const { addItem } = useCart()
  const [selectedCategory, setSelectedCategory] = useState<string>('all')
  const [searchQuery, setSearchQuery] = useState('')
  const [sortBy, setSortBy] = useState<'name' | 'price' | 'price-desc'>('name')

  // –ü–æ–ª–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤
  const allProducts: Product[] = [
    {
      id: 1,
      name: '–ó–µ–ª–µ–Ω—ã–π —á–∞–π "–î—Ä–∞–∫–æ–Ω"',
      description: '–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π –∑–µ–ª–µ–Ω—ã–π —á–∞–π —Å –Ω–µ–∂–Ω—ã–º –∞—Ä–æ–º–∞—Ç–æ–º –∏ –º—è–≥–∫–∏–º –≤–∫—É—Å–æ–º',
      price: 1200,
      image: 'üçÉ',
      category: '–ó–µ–ª–µ–Ω—ã–π —á–∞–π',
      weight: '100–≥',
      origin: '–ö–∏—Ç–∞–π'
    },
    {
      id: 2,
      name: '–ß–µ—Ä–Ω—ã–π —á–∞–π "–≠—Ä–ª –ì—Ä–µ–π"',
      description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —á–µ—Ä–Ω—ã–π —á–∞–π —Å –±–µ—Ä–≥–∞–º–æ—Ç–æ–º',
      price: 950,
      image: 'ü´ñ',
      category: '–ß–µ—Ä–Ω—ã–π —á–∞–π',
      weight: '100–≥',
      origin: '–ò–Ω–¥–∏—è'
    },
    {
      id: 3,
      name: '–£–ª—É–Ω "–ñ–µ–ª–µ–∑–Ω–∞—è –ë–æ–≥–∏–Ω—è"',
      description: '–ü–æ–ª—É—Ñ–µ—Ä–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —á–∞–π —Å –±–æ–≥–∞—Ç—ã–º –≤–∫—É—Å–æ–º',
      price: 1800,
      image: 'üçÇ',
      category: '–£–ª—É–Ω',
      weight: '100–≥',
      origin: '–¢–∞–π–≤–∞–Ω—å'
    },
    {
      id: 4,
      name: '–ë–µ–ª—ã–π —á–∞–π "–°–µ—Ä–µ–±—Ä—è–Ω–∞—è –ò–≥–ª–∞"',
      description: '–ù–µ–∂–Ω—ã–π –±–µ–ª—ã–π —á–∞–π —Å —Ü–≤–µ—Ç–æ—á–Ω—ã–º–∏ –Ω–æ—Ç–∫–∞–º–∏',
      price: 2200,
      image: 'üå∏',
      category: '–ë–µ–ª—ã–π —á–∞–π',
      weight: '100–≥',
      origin: '–ö–∏—Ç–∞–π'
    },
    {
      id: 5,
      name: '–ü—É—ç—Ä "–î—Ä–µ–≤–Ω–∏–π –î–µ—Ä–µ–≤"',
      description: '–í—ã–¥–µ—Ä–∂–∞–Ω–Ω—ã–π –ø—É—ç—Ä —Å –∑–µ–º–ª–∏—Å—Ç—ã–º –≤–∫—É—Å–æ–º',
      price: 3500,
      image: 'ü´ò',
      category: '–ü—É—ç—Ä',
      weight: '100–≥',
      origin: '–ö–∏—Ç–∞–π'
    },
    {
      id: 6,
      name: '–†–æ–º–∞—à–∫–æ–≤—ã–π —Å–±–æ—Ä',
      description: '–£—Å–ø–æ–∫–∞–∏–≤–∞—é—â–∏–π —Ç—Ä–∞–≤—è–Ω–æ–π —á–∞–π —Å —Ä–æ–º–∞—à–∫–æ–π',
      price: 450,
      image: 'üåø',
      category: '–¢—Ä–∞–≤—è–Ω—ã–µ —Å–±–æ—Ä—ã',
      weight: '100–≥',
      origin: '–†–æ—Å—Å–∏—è'
    },
    {
      id: 7,
      name: '–ú—è—Ç–Ω—ã–π —á–∞–π',
      description: '–û—Å–≤–µ–∂–∞—é—â–∏–π —á–∞–π —Å –ø–µ—Ä–µ—á–Ω–æ–π –º—è—Ç–æ–π',
      price: 380,
      image: 'üå±',
      category: '–¢—Ä–∞–≤—è–Ω—ã–µ —Å–±–æ—Ä—ã',
      weight: '100–≥',
      origin: '–†–æ—Å—Å–∏—è'
    },
    {
      id: 8,
      name: '–ñ–∞—Å–º–∏–Ω–æ–≤—ã–π —É–ª—É–Ω',
      description: '–£–ª—É–Ω —Å –∞—Ä–æ–º–∞—Ç–æ–º –∂–∞—Å–º–∏–Ω–∞',
      price: 1600,
      image: 'üå∫',
      category: '–£–ª—É–Ω',
      weight: '100–≥',
      origin: '–ö–∏—Ç–∞–π'
    }
  ]

  const categories = ['all', '–ó–µ–ª–µ–Ω—ã–π —á–∞–π', '–ß–µ—Ä–Ω—ã–π —á–∞–π', '–£–ª—É–Ω', '–ë–µ–ª—ã–π —á–∞–π', '–ü—É—ç—Ä', '–¢—Ä–∞–≤—è–Ω—ã–µ —Å–±–æ—Ä—ã']

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
  const filteredAndSortedProducts = useMemo(() => {
    let filtered = allProducts.filter(product => {
      const matchesCategory = selectedCategory === 'all' || product.category === selectedCategory
      const matchesSearch = product.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
                           product.description.toLowerCase().includes(searchQuery.toLowerCase())
      return matchesCategory && matchesSearch
    })

    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
    filtered.sort((a, b) => {
      switch (sortBy) {
        case 'name':
          return a.name.localeCompare(b.name)
        case 'price':
          return a.price - b.price
        case 'price-desc':
          return b.price - a.price
        default:
          return 0
      }
    })

    return filtered
  }, [selectedCategory, searchQuery, sortBy])

  return (
    <div className="Catalog">
      <h1 className="text-center mb-4" style={{ fontSize: '28px' }}>
        –ö–∞—Ç–∞–ª–æ–≥ —á–∞—è
      </h1>

      {/* –§–∏–ª—å—Ç—Ä—ã */}
      <div className="card mb-4">
        <div className="flex gap-4" style={{ flexWrap: 'wrap', alignItems: 'center' }}>
          {/* –ü–æ–∏—Å–∫ */}
          <div style={{ flex: '1', minWidth: '200px' }}>
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é..."
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              style={{
                width: '100%',
                padding: '8px 12px',
                border: '1px solid var(--tg-theme-hint-color, #999999)',
                borderRadius: '6px',
                fontSize: '16px'
              }}
            />
          </div>

          {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
          <div style={{ flex: '1', minWidth: '200px' }}>
            <select
              value={selectedCategory}
              onChange={(e) => setSelectedCategory(e.target.value)}
              style={{
                width: '100%',
                padding: '8px 12px',
                border: '1px solid var(--tg-theme-hint-color, #999999)',
                borderRadius: '6px',
                fontSize: '16px'
              }}
            >
              {categories.map(category => (
                <option key={category} value={category}>
                  {category === 'all' ? '–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏' : category}
                </option>
              ))}
            </select>
          </div>

          {/* –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
          <div style={{ flex: '1', minWidth: '200px' }}>
            <select
              value={sortBy}
              onChange={(e) => setSortBy(e.target.value as any)}
              style={{
                width: '100%',
                padding: '8px 12px',
                border: '1px solid var(--tg-theme-hint-color, #999999)',
                borderRadius: '6px',
                fontSize: '16px'
              }}
            >
              <option value="name">–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é</option>
              <option value="price">–ü–æ —Ü–µ–Ω–µ (–≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏–µ)</option>
              <option value="price-desc">–ü–æ —Ü–µ–Ω–µ (—É–±—ã–≤–∞–Ω–∏–µ)</option>
            </select>
          </div>
        </div>
      </div>

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ */}
      <div className="mb-4">
        <p style={{ opacity: 0.7 }}>
          –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {filteredAndSortedProducts.length}
        </p>
      </div>

      {/* –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ */}
      <div className="flex gap-4" style={{ flexWrap: 'wrap' }}>
        {filteredAndSortedProducts.map((product) => (
          <div key={product.id} className="card" style={{ flex: '1', minWidth: '300px' }}>
            <div className="text-center mb-4">
              <div style={{ fontSize: '64px', marginBottom: '16px' }}>
                {product.image}
              </div>
              <h3 style={{ fontSize: '20px', marginBottom: '8px' }}>{product.name}</h3>
              <p style={{ opacity: 0.7, marginBottom: '16px' }}>{product.description}</p>
              
              <div className="flex items-center justify-between mb-4">
                <span style={{ fontSize: '24px', fontWeight: 'bold', color: 'var(--tg-theme-button-color, #0088cc)' }}>
                  {product.price} ‚ÇΩ
                </span>
                <span style={{ opacity: 0.6 }}>{product.weight}</span>
              </div>
              
              <div style={{ marginBottom: '16px' }}>
                <span style={{ 
                  background: 'var(--tg-theme-secondary-bg-color, #f8f9fa)', 
                  padding: '4px 8px', 
                  borderRadius: '4px',
                  fontSize: '14px',
                  opacity: 0.8
                }}>
                  {product.category}
                </span>
              </div>
              
              <div className="flex gap-2">
                <Link 
                  to={`/product/${product.id}`} 
                  className="btn"
                  style={{ flex: '1', textDecoration: 'none' }}
                >
                  –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                </Link>
                <button 
                  className="btn"
                  onClick={() => addItem(product)}
                  style={{ flex: '1' }}
                >
                  –í –∫–æ—Ä–∑–∏–Ω—É
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ */}
      {filteredAndSortedProducts.length === 0 && (
        <div className="text-center" style={{ padding: '40px 0' }}>
          <div style={{ fontSize: '64px', marginBottom: '16px' }}>üîç</div>
          <h3 style={{ fontSize: '20px', marginBottom: '8px' }}>–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
          <p style={{ opacity: 0.7, marginBottom: '16px' }}>
            –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é
          </p>
          <button 
            className="btn"
            onClick={() => {
              setSearchQuery('')
              setSelectedCategory('all')
            }}
          >
            –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
          </button>
        </div>
      )}
    </div>
  )
}

export default Catalog
