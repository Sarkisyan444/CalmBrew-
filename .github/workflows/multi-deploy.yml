name: Multi-Platform Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

env:
  NODE_VERSION: '18'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      dist-path: ${{ steps.build.outputs.path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        id: build
        run: |
          npm run build
          echo "path=./dist" >> $GITHUB_OUTPUT
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: ./dist

  deploy-github-pages:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-files
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: GitHub Pages status
        run: |
          echo "‚úÖ GitHub Pages —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç: ${{ steps.deployment.outputs.page_url }}"

  deploy-netlify:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ secrets.NETLIFY_AUTH_TOKEN }}
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-files
      
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './dist'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  deploy-vercel:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ secrets.VERCEL_TOKEN }}
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-files
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod'

  notify-success:
    runs-on: ubuntu-latest
    needs: [deploy-github-pages, deploy-netlify, deploy-vercel]
    if: always()
    steps:
      - name: Deployment summary
        run: |
          echo "## üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" >> summary.md
          echo "" >> summary.md
          echo "### üìä –°—Ç–∞—Ç—É—Å:" >> summary.md
          echo "- GitHub Pages: ${{ needs.deploy-github-pages.result }}" >> summary.md
          echo "- Netlify: ${{ needs.deploy-netlify.result }}" >> summary.md
          echo "- Vercel: ${{ needs.deploy-vercel.result }}" >> summary.md
          echo "" >> summary.md
          echo "### üîó –°—Å—ã–ª–∫–∏:" >> summary.md
          if [ "${{ needs.deploy-github-pages.result }}" == "success" ]; then
            echo "- üåê GitHub Pages: ${{ needs.deploy-github-pages.outputs.url }}" >> summary.md
          fi
          echo "" >> summary.md
          echo "*–†–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ GitHub Actions*"
      
      - name: Upload summary
        uses: actions/upload-artifact@v3
        with:
          name: deployment-summary
          path: summary.md
